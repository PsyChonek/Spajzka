{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserDto": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"accessCode": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"username",
					"displayName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserDto": {
				"properties": {
					"username": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ItemDto": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"isOnBuylist": {
						"type": "boolean"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"groupId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"isOnBuylist",
					"amount",
					"price",
					"groupId",
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GroupDto": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"userIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"userIds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateItemDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"isOnBuylist": {
						"type": "boolean"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"groupId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"groupId",
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateItemDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"isOnBuylist": {
						"type": "boolean"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"groupId": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CreateGroupDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"userIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateGroupDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AddUserToGroupDto": {
				"properties": {
					"userId": {
						"type": "string"
					}
				},
				"required": [
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserDto": {
				"properties": {
					"username": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					}
				},
				"required": [
					"username"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenResponseDto": {
				"properties": {
					"token": {
						"type": "string"
					},
					"expiresIn": {
						"type": "number",
						"format": "double"
					},
					"user": {
						"$ref": "#/components/schemas/UserDto"
					}
				},
				"required": [
					"token",
					"expiresIn",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginDto": {
				"properties": {
					"accessCode": {
						"type": "string"
					}
				},
				"required": [
					"accessCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResetAccessCodeResponseDto": {
				"properties": {
					"accessCode": {
						"type": "string"
					}
				},
				"required": [
					"accessCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpgradeGuestDto": {
				"properties": {
					"username": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					}
				},
				"required": [
					"username"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "Spajzka API",
		"version": "1.0.0",
		"description": "API for managing shopping lists",
		"contact": {
			"name": "API Support",
			"email": "support@example.com"
		}
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all users",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDto"
								}
							}
						}
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Get a user by ID",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation error"
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Update a user",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserDto"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "User deleted"
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Delete a user",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/{userId}/items": {
			"get": {
				"operationId": "GetUserItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ItemDto"
									},
									"type": "array"
								}
							}
						}
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Get all items for a user",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/{userId}/groups": {
			"get": {
				"operationId": "GetUserGroups",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/GroupDto"
									},
									"type": "array"
								}
							}
						}
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Get all groups for a user",
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/items": {
			"get": {
				"operationId": "GetAllItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ItemDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all items",
				"tags": [
					"Items"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateItem",
				"responses": {
					"201": {
						"description": "Item created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation error"
					}
				},
				"description": "Create a new item",
				"tags": [
					"Items"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateItemDto"
							}
						}
					}
				}
			}
		},
		"/items/{itemId}": {
			"get": {
				"operationId": "GetItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemDto"
								}
							}
						}
					},
					"404": {
						"description": "Item not found"
					}
				},
				"description": "Get an item by ID",
				"tags": [
					"Items"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation error"
					},
					"404": {
						"description": "Item not found"
					}
				},
				"description": "Update an item",
				"tags": [
					"Items"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateItemDto"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteItem",
				"responses": {
					"204": {
						"description": "Item deleted"
					},
					"404": {
						"description": "Item not found"
					}
				},
				"description": "Delete an item",
				"tags": [
					"Items"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/health": {
			"get": {
				"operationId": "HealthCheck",
				"responses": {
					"200": {
						"description": "A simple status message",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"status": {
											"type": "string"
										}
									},
									"required": [
										"status"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Health check endpoint",
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		},
		"/groups": {
			"get": {
				"operationId": "GetAllGroups",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/GroupDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all groups",
				"tags": [
					"Groups"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateGroup",
				"responses": {
					"201": {
						"description": "Group created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GroupDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation error"
					}
				},
				"description": "Create a new group",
				"tags": [
					"Groups"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateGroupDto"
							}
						}
					}
				}
			}
		},
		"/groups/{groupId}": {
			"get": {
				"operationId": "GetGroup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GroupDto"
								}
							}
						}
					},
					"404": {
						"description": "Group not found"
					}
				},
				"description": "Get a group by ID",
				"tags": [
					"Groups"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateGroup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GroupDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation error"
					},
					"404": {
						"description": "Group not found"
					}
				},
				"description": "Update a group",
				"tags": [
					"Groups"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateGroupDto"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteGroup",
				"responses": {
					"204": {
						"description": "Group deleted"
					},
					"404": {
						"description": "Group not found"
					}
				},
				"description": "Delete a group",
				"tags": [
					"Groups"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/groups/{groupId}/users": {
			"post": {
				"operationId": "AddUserToGroup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GroupDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation error"
					},
					"404": {
						"description": "Group not found"
					}
				},
				"description": "Add a user to a group",
				"tags": [
					"Groups"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddUserToGroupDto"
							}
						}
					}
				}
			}
		},
		"/groups/{groupId}/users/{userId}": {
			"delete": {
				"operationId": "RemoveUserFromGroup",
				"responses": {
					"204": {
						"description": "User removed from group"
					},
					"404": {
						"description": "Group not found"
					}
				},
				"description": "Remove a user from a group",
				"tags": [
					"Groups"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "User registered successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDto"
								}
							}
						}
					},
					"400": {
						"description": "Validation error"
					}
				},
				"description": "Register a new user with username only. Returns a unique access code (UUID) for login.",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDto"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Invalid access code"
					}
				},
				"description": "Login using access code. Returns JWT token and user info.",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginDto"
							}
						}
					}
				}
			}
		},
		"/auth/reset-code": {
			"post": {
				"operationId": "ResetAccessCode",
				"responses": {
					"200": {
						"description": "Access code reset successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ResetAccessCodeResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Reset access code. Generates a new UUID and invalidates the old one (logs out all devices).\nRequires authentication.",
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/auth/register-guest": {
			"post": {
				"operationId": "RegisterGuest",
				"responses": {
					"201": {
						"description": "Guest user created and logged in",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenResponseDto"
								}
							}
						}
					}
				},
				"description": "Register a new guest user with auto-generated username. Automatically logs in and returns JWT token.",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/upgrade-guest": {
			"post": {
				"operationId": "UpgradeGuest",
				"responses": {
					"200": {
						"description": "Guest account upgraded successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDto"
								}
							}
						}
					},
					"400": {
						"description": "Username already taken or invalid"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"description": "Upgrade guest account to permanent account with a custom username.\nRequires authentication.",
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeGuestDto"
							}
						}
					}
				}
			}
		}
	},
	"servers": [],
	"tags": [
		{
			"name": "Users",
			"description": "User management"
		},
		{
			"name": "Groups",
			"description": "Shopping group management"
		},
		{
			"name": "Items",
			"description": "Shopping items management"
		},
		{
			"name": "Health",
			"description": "Health check"
		}
	]
}