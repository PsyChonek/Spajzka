{
  "openapi": "3.0.0",
  "info": {
    "title": "Spajzka API",
    "version": "1.0.0",
    "description": "Spajzka API documentation with Swagger",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "http://localhost:8080",
      "description": "Production server"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User ID"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password (min 6 characters)"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT authentication token"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "format": "password"
          },
          "newPassword": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "oldPassword",
          "newPassword"
        ]
      },
      "Item": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Item ID"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "unit": {
            "type": "string",
            "description": "Unit of measurement"
          },
          "category": {
            "type": "string",
            "description": "Item category"
          },
          "price": {
            "type": "number",
            "description": "Price per unit"
          },
          "expiryDate": {
            "type": "string",
            "format": "date",
            "description": "Expiry date"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "name",
          "unit"
        ]
      },
      "CreateItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "unit": {
            "type": "string",
            "description": "Unit of measurement"
          },
          "category": {
            "type": "string",
            "description": "Item category"
          },
          "price": {
            "type": "number",
            "description": "Price per unit"
          },
          "expiryDate": {
            "type": "string",
            "format": "date",
            "description": "Expiry date"
          }
        },
        "required": [
          "name",
          "unit"
        ]
      },
      "PantryItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Item ID"
          },
          "userId": {
            "type": "string",
            "description": "Owner user ID"
          },
          "itemId": {
            "type": "string",
            "description": "Reference to common item ID"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "quantity": {
            "type": "number",
            "description": "Item quantity"
          },
          "unit": {
            "type": "string",
            "description": "Unit of measurement"
          },
          "price": {
            "type": "number",
            "description": "Price per unit"
          },
          "category": {
            "type": "string",
            "description": "Item category"
          },
          "expiryDate": {
            "type": "string",
            "format": "date",
            "description": "Expiry date"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "quantity"
        ]
      },
      "CreatePantryItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "category": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "name",
          "quantity"
        ]
      },
      "ShoppingItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Item ID"
          },
          "userId": {
            "type": "string",
            "description": "Owner user ID"
          },
          "itemId": {
            "type": "string",
            "description": "Reference to common item ID"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "quantity": {
            "type": "number",
            "description": "Item quantity"
          },
          "unit": {
            "type": "string",
            "description": "Unit of measurement"
          },
          "completed": {
            "type": "boolean",
            "description": "Whether item is completed"
          },
          "category": {
            "type": "string",
            "description": "Item category"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateShoppingItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Authenticate user and get JWT token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Get current user",
        "description": "Get the currently authenticated user's information",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout",
        "description": "Logout user (client should remove token)",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/api/auth/profile": {
      "put": {
        "summary": "Update profile",
        "description": "Update user's name and/or email",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "summary": "Change password",
        "description": "Change user's password",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "401": {
            "description": "Invalid old password"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the health status of the API and database connection",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "database": {
                      "type": "string",
                      "example": "connected"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/items": {
      "get": {
        "summary": "Get all items",
        "description": "Retrieve a list of all items in the pantry",
        "tags": [
          "Items"
        ],
        "responses": {
          "200": {
            "description": "A list of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new item",
        "description": "Add a new item to the pantry",
        "tags": [
          "Items"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/{id}": {
      "get": {
        "summary": "Get item by ID",
        "description": "Retrieve a specific item by its ID",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an item",
        "description": "Update an existing item by its ID",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Item ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item",
        "description": "Delete an item by its ID",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Item ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted successfully"
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/pantry": {
      "get": {
        "summary": "Get all pantry items",
        "description": "Retrieve all pantry items for the authenticated user",
        "tags": [
          "Pantry"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of pantry items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PantryItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create pantry item",
        "description": "Add a new item to the pantry",
        "tags": [
          "Pantry"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePantryItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PantryItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/pantry/{id}": {
      "get": {
        "summary": "Get pantry item by ID",
        "description": "Retrieve a specific pantry item",
        "tags": [
          "Pantry"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pantry item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PantryItem"
                }
              }
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "put": {
        "summary": "Update pantry item",
        "description": "Update an existing pantry item",
        "tags": [
          "Pantry"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePantryItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PantryItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete pantry item",
        "description": "Delete a pantry item",
        "tags": [
          "Pantry"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        }
      }
    },
    "/api/shopping": {
      "get": {
        "summary": "Get all shopping items",
        "description": "Retrieve all shopping list items for the authenticated user",
        "tags": [
          "Shopping"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of shopping items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShoppingItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create shopping item",
        "description": "Add a new item to the shopping list",
        "tags": [
          "Shopping"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShoppingItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/shopping/{id}": {
      "get": {
        "summary": "Get shopping item by ID",
        "description": "Retrieve a specific shopping item",
        "tags": [
          "Shopping"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shopping item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update shopping item",
        "description": "Update an existing shopping item",
        "tags": [
          "Shopping"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "completed": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete shopping item",
        "description": "Delete a shopping item",
        "tags": [
          "Shopping"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        }
      }
    }
  },
  "tags": []
}